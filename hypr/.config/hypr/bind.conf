$mainMod = SUPER

$terminal = st
$fileManager = nautilus
$browser = firefox
$menu = rofi -show drun

bind = $mainMod, RETURN, exec, $terminal
bind = CTRL_ALT, T, exec, $terminal --class floating
bind = $mainMod, W, killactive,  
bind = $mainMod, F11, fullscreen 
bind = $mainMod, Y, exec, /home/ninjafire/.config/hypr/random-wall.sh
bind = ALT, 0, exec, $fileManager
bind = $mainMod, F, exec, $browser
bind = $mainMod, D, exec, $browser -p work
bind = $CTRL_SHIFT, P, exec, $browser --private-window
bind = ALT, 9, exec, hyprlock
bind = $mainMod_SHIFT, F, togglefloating, 
bind = $mainMod, M, exec, killall Hyprland 
bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod, J, togglesplit, 
bind = $mainMod, K, exec, killall waybar || waybar # hide or kill and display waybar

# rofi
bind = $mainMod, SPACE, exec, ~/.config/rofi/launchers/launcher.sh
bind = $mainMod SHIFT, SPACE, exec, ~/.config/rofi/run/run.sh

# Screenshot
bind = SHIFT, Print, exec, FILE=~/Pictures/Screenshot/Screenshot-$(date +%F_%T).png; grim -g "$(slurp)" - | tee >(wl-copy) | { cat > "$FILE" && [ -s "$FILE" ] && dunstify -i "$FILE" "Screenshot of the region taken" -t 1000 || rm -f "$FILE"; }
bind = , Print, exec, grim - | wl-copy && wl-paste > ~/Pictures/Screenshots/Screenshot-$(date +%F_%T).png | dunstify  -i ~/Pictures/Screenshots/Screenshot-$(date +%F_%T).png "Screenshot of whole screen taken" -t 1000 # screenshot of the whole screen

# Poweroff, Logout, Reboot
bind = $mainMod_SHIFT_ALT, P, exec, shutdown -h now
bind = $mainMod_SHIFT_ALT, R, exec, reboot
bind = $mainMod_SHIFT_ALT, L, exit,

# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d
bind = ALT, Tab, cyclenext
bind = $mainMod, Tab, swapnext

# Switch workspaces with mainMod + [1-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9

# Move active window to a workspace with mainMod + SHIFT + [1-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9

# scratchpad
bind = $mainMod, S, togglespecialworkspace, magic
bind = $mainMod SHIFT, S, movetoworkspace, special:magic

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow
bind = $mainMod SHIFT, right, resizeactive, 10 0
bind = $mainMod SHIFT, left, resizeactive, -10 0
bind = $mainMod SHIFT, up, resizeactive, 0 -10
bind = $mainMod SHIFT, down, resizeactive, 0 10

bindel = ,XF86MonBrightnessUp, exec, brightnessctl s 10%+
bindel = ,XF86MonBrightnessDown, exec, brightnessctl s 10%-

# audio/sound control
bindel = , xf86audioraisevolume, exec, pamixer -i 5 && dunstify -h int:value:"$(pamixer --get-volume)" -i ~/.config/dunst/assets/volume.svg -t 500 -r 2593 "Volume: $(pamixer --get-volume) %" 
bindel = , xf86audiolowervolume, exec, pamixer -d 5 && dunstify -h int:value:"$(pamixer --get-volume)" -i ~/.config/dunst/assets/volume.svg -t 500 -r 2593 "Volume: $(pamixer --get-volume) %" 
bindel = , xf86AudioMute, exec, pamixer -t && dunstify -i ~/.config/dunst/assets/$(pamixer --get-mute | grep -q "true" && echo "volume-mute.svg" || echo "volume.svg") -t 500 -r 2593 "Toggle Mute"
bindel = , XF86AudioPlay, exec, playerctl play-pause
bindel = , XF86AudioNext, exec, playerctl next
bindel = , XF86AudioPrev, exec, playerctl previous
bindel = , XF86audiostop, exec, playerctl stop
